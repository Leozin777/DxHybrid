class e{constructor(e,t,o){this.defaultValueSource=e,this.computedValueSource=t,this.valueDestination=o}}const t=[new e("--bs-body-bg","background-color","--dxbl-body-bg"),new e("--bs-body-color","color","--dxbl-body-color")],o=["--primary","--bs-primary"],r=50,n=200,a=document.createElement("link");function u(){const e=document.body,o=window.getComputedStyle(e);t.forEach((t=>{e.style.removeProperty(t.valueDestination)})),t.filter((e=>!o.getPropertyValue(e.defaultValueSource))).forEach((t=>{e.style.setProperty(t.valueDestination,o.getPropertyValue(t.computedValueSource))}))}function d(e,t){if(0===t)return e();const r=window.getComputedStyle(document.body);if(o.map((e=>!!r.getPropertyValue(e))).reduce(((e,t)=>e||t),!1))return e();setTimeout((()=>d(e,t-1)),n)}function s(e){return new Promise(((t,o)=>{const n=a.cloneNode(!1);n.href=e;const u=e=>{n.remove(),d(t,r)};n.onload=u,n.onerror=u,document.head.append(n)}))}async function c(e){if(e.nodeType===Node.ELEMENT_NODE){if("LINK"===e.tagName){const t=e;if("stylesheet"===t.rel)return await s(t.href),!0}}return!1}function i(e){c(e).then((e=>{e&&u()}))}a.rel="preload",a.as="style";const l={initializeThemeCssRuntimeVariables:function(){const e=document.head;new MutationObserver(((e,t)=>{for(const t of e)"childList"===t.type&&t.addedNodes?t.addedNodes.forEach(i):"attributes"===t.type&&"href"===t.attributeName&&i(t.target)})).observe(e,{attributes:!0,childList:!0,subtree:!0}),Promise.all(Array.from(document.head.childNodes).map((e=>c(e)))).then((()=>u()))}};export{l as default};
